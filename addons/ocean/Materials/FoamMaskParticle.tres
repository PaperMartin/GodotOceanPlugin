[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_never,cull_back,diffuse_burley,specular_schlick_ggx,unshaded;
uniform float power = 1.0;

float remap(float value, float InputA, float InputB, float OutputA, float OutputB){
    return(value - InputA) / (InputB - InputA) * (OutputB - OutputA) + OutputA;
}

void vertex() {

}

void fragment() {
	vec2 distvec = (UV) - vec2(0.5,0.5);
	float dist = length(distvec);
	dist = dist * 2.0;
	dist = pow(dist,power);
	dist = 1.0 - dist;
	dist = clamp(dist,0.0,1.0);
	ALBEDO = vec3(1.0,1.0,1.0);
	ALPHA = dist * 1.0;
}
"

[resource]
shader = SubResource( 1 )
shader_param/power = 1.0
